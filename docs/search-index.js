var searchIndex = new Map(JSON.parse('[\
["chat",{"doc":"","t":"EECCECCCCCFNNNNNNNNNNNNNNNNNNNNNOOOONNNNNPGFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNHNNNHNNNNNNNNNNNNPPGNNHNNHNNNNNNNNNNNNNHNNNNHNPFGPPPFPNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNONNOONNNONNNNNNNNNNNNNNNNNPPPFFGNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNOONNNNNNNNNNNNOCCCCCFNNNNNNNNNONNNNNNNNNONNNNNNNNONNNNNNNFGPPPPPPIPPFFGNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNONNNNNFFNNNNNNONNNNONNNNNNNNNNNNNNNNNNNOONNNNONNNNNNNNNNNNFNNONNNNONNNNNNNNNNNNNNNNNNNNONNONNNNNN","n":["Client","Server","client","server","start_io","client","io","parser","requests","state","Client","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","emit_server_response_error","fmt","from","from_ref","handle_state_update","into","into_any","into_any_arc","into_any_rc","into_request","new","on_local_message","on_message","on_timer","request_builder","self_address","server_address","state_machine","to_owned","try_from","try_into","type_id","vzip","ChatEvent","Info","InnerInfo","InnerInfo","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_ref","info","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_request","into_request","log_auth_request","new","serialize","serialize","start_io","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BadSyntax","CommandNotExists","ParseError","as_any","as_any_mut","bad_syntax","borrow","borrow_mut","command_not_exists","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","into","into_any","into_any_arc","into_any_rc","into_request","parse_request","to_string","try_from","try_into","type_id","validate_param","vzip","Auth","ClientRequest","ClientRequestKind","Connect","Create","Disconnect","RequestBuilder","SendMessage","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","auth_request","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_with_kind","client","client","clone","clone","clone","clone_into","clone_into","clone_into","connect_request","create_request","deserialize","deserialize","disconnect_request","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","id","id","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","kind","new","next_id","password","password","send_message_request","serialize","serialize","time","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AuthRequest","ClientRequestOrServerMessage","ServerResponse","State","StateUpdateResult","WaitingFor","__clone_box","__clone_box","__clone_box","add_to_user_info","add_to_user_info_vec","apply_client_request","apply_server_msg","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chat","clone","clone","clone","clone_into","clone_into","clone_into","default","default","drain_and_filter_pending_server_messages","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_nothing","from_ref","from_ref","from_ref","from_to_server_request","from_to_user_info","from_to_user_info_vec","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","on_request_responded","pending_client_requests","pending_server_messages","set_to_server_request","to_owned","to_owned","to_owned","to_server","to_user","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","waiting_for","chat","messages","server","state","user","Chat","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","connect_user","connected_users","connected_users","disconnect_user","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","history","into","into_any","into_any_arc","into_any_rc","into_request","is_connected","make_chat_event","name","name","new","send_message","to_owned","try_from","try_into","type_id","vzip","ChatEvent","ChatEventKind","ChatEvents","Connected","Created","Disconnected","Err","Ok","RequestResponse","RequestResponse","SentMessage","ServerMessage","ServerMessageBuilder","ServerMessageKind","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chat","chat_created","client","client_connected","client_disconnected","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","into_request","into_request","kind","kind","message_sent","new","new_bad_response","new_chat_event","new_chat_events","new_good_response","new_with_kind","new_with_kind","serialize","serialize","serialize","serialize","server","server","time","time","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Server","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","from","from_ref","into","into_any","into_any_arc","into_any_rc","into_request","new","on_local_message","on_message","on_timer","process_routed_msg","send_msg_to_user","state","to_owned","try_from","try_into","type_id","vzip","RoutedMessage","State","__clone_box","as_any","as_any","as_any_mut","as_any_mut","auth_user","auth_users","borrow","borrow","borrow_mut","borrow_mut","chats","clone","clone_into","connect_user_to_chat","disconnect_user","fmt","from","from","from_ref","get_user_by_address","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_request","into_request","msg","msg_builder","new","prepare_event_broadcast","process_client_request","remove_auth_for_user","to","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_create_chat","user_send_message_in_chat","verify_user","vzip","vzip","User","__clone_box","address","address","as_any","as_any_mut","borrow","borrow_mut","chat","clone","clone_into","connect_to_chat","connected_chat","disconnect_from_chat","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from_ref","into","into_any","into_any_arc","into_any_rc","into_request","is_connected_to_chat","name","name","new","password","password","to_owned","try_from","try_into","type_id","verify","vzip"],"q":[[0,"chat"],[5,"chat::client"],[10,"chat::client::client"],[41,"chat::client::io"],[112,"chat::client::parser"],[141,"chat::client::requests"],[245,"chat::client::state"],[340,"chat::server"],[345,"chat::server::chat"],[382,"chat::server::messages"],[542,"chat::server::server"],[569,"chat::server::state"],[621,"chat::server::user"],[660,"dyn_clone::sealed"],[661,"core::any"],[662,"alloc::string"],[663,"core::fmt"],[664,"core::fmt"],[665,"alloc::boxed"],[666,"alloc::sync"],[667,"alloc::rc"],[668,"tonic::request"],[669,"dsbuild::common::process"],[670,"dsbuild::common::message"],[671,"core::result"],[672,"core::any"],[673,"erased_serde::ser"],[674,"erased_serde::ser"],[675,"serde::ser"],[676,"dsbuild::common::process"],[677,"std::sync::mutex"],[678,"core::option"]],"d":["","","","","","","Definitions of methods for <code>Client</code> input and output â€¦","","","Definition of possible client states and related logic.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Event in chat.","Represents info which user can get from the process.","","Represents inner error information.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Start client io-activity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Parse request from user.","","","","","","","","Represents request from client to server.","Represents types of the client request.","","","","Allows to build requests comfortable.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wait for auth request from user.","Corresponds to state, when client listens for the user â€¦","Corresponds to state, when client waits for the response â€¦","Represents state of client.","Represents information which <code>State</code> returns to the [<code>Client</code>].","Represents possible states of client.","","","","","","Apply specified client request.","Apply specified server message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Handle response on request for which state was waiting.","","","","","","","Request which client can send to the server. After one â€¦","Information which client can send to the user in the same â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns event and history with connect event.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Represents chat event born by request of some client.","Represents event in the chat.","","","","","Contains the error value","Contains the success value","Represents response from server to client request.","","","Represents messages from server to the client.","","Represents messages from server to the client.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,21,0,0,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,20,20,20,21,21,21,21,20,21,20,20,21,21,20,21,21,21,21,20,21,20,20,21,20,21,20,21,20,21,20,21,0,20,20,21,0,20,21,20,21,20,21,20,21,20,21,20,21,31,31,0,31,31,0,31,31,0,31,31,31,31,31,31,31,31,31,31,31,31,31,0,31,31,31,31,0,31,32,0,0,32,32,32,0,32,35,32,34,35,32,34,35,32,34,34,35,32,34,35,32,34,34,35,34,35,32,34,35,32,34,34,34,35,32,34,35,32,35,35,35,35,32,32,32,32,35,32,35,35,32,32,34,35,32,34,35,32,34,35,34,35,32,34,35,32,34,35,32,34,35,32,34,35,32,34,35,34,34,35,34,34,35,32,35,35,32,34,35,32,35,32,34,35,32,34,35,32,34,35,32,34,38,38,38,0,0,0,38,10,37,10,10,37,37,38,10,37,38,10,37,38,10,37,38,10,37,37,38,10,37,38,10,37,38,37,37,38,10,38,38,38,38,10,10,10,10,38,10,37,38,10,37,10,38,10,37,10,10,10,38,10,37,38,10,37,38,10,37,38,10,37,38,10,37,37,37,37,10,38,10,37,10,10,38,10,37,38,10,37,38,10,37,38,10,37,37,0,0,0,0,0,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,42,41,41,41,50,50,0,42,41,0,0,0,41,27,42,7,43,41,27,42,7,43,41,27,42,7,43,41,27,42,7,43,41,27,42,7,27,27,27,27,27,41,27,42,7,41,27,42,7,41,27,42,7,41,27,42,41,41,41,41,27,27,27,27,42,42,42,42,41,27,42,7,41,27,27,42,42,7,7,43,41,27,42,7,41,27,42,7,43,41,27,42,7,43,41,27,42,7,43,41,27,42,7,43,41,27,42,7,43,41,27,42,7,27,7,27,43,43,43,43,43,43,27,41,27,42,7,43,7,27,7,41,27,42,7,27,42,7,43,41,27,42,7,43,41,27,42,7,43,41,27,42,7,43,41,27,42,7,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,45,46,45,46,45,46,46,46,45,46,45,46,45,45,46,46,45,46,45,45,46,46,45,46,45,46,45,46,45,46,45,45,46,46,46,46,46,45,45,46,45,46,45,46,45,46,46,46,46,45,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49],"f":"```````````{{cb}d{}}{cf{}}0{ce{}{}}0{hh}{{ce}d{}{}}{{jll}n}{{hA`}Ab}{cc{}}0{{hAdAf}d}6{{{Ah{c}}}{{Ah{f}}}{}}{{{Aj{c}}}{{Aj{f}}}{}}{{{Al{c}}}{{Al{f}}}{}}{c{{An{e}}}{}{}}{{B`B`ll}h}{{hBbAf}{{Bd{dl}}}}{{hBbB`Af}{{Bd{dl}}}}{{hlAf}{{Bd{dl}}}}````>{c{{Bd{e}}}{}{}}0{cBf{}}{ce{}{}}````{{cb}d{}}0{cf{}}0002222{BhBh}{BjBj}{{ce}d{}{}}0{c{{Bd{Bh}}}Bl}{c{{Bd{Bj}}}Bl}{{BhBh}Bn}{{BjBj}Bn}{{ce}Bn{}{}}0000000{{cC`}{{Bd{CbCd}}}{}}0{{BhA`}Ab}0{{BjA`}Ab}0{cc{}}{BbBj}{CfBj}{ChBj}333`{ce{}{}}0{{{Ah{c}}}{{Ah{f}}}{}}0{{{Aj{c}}}{{Aj{f}}}{}}0{{{Al{c}}}{{Al{f}}}{}}0{c{{An{e}}}{}{}}0{{}d}{lBh}{{Bhc}BdCj}{{Bjc}BdCj}{{{Cl{h}}}d}99{cl{}}0{c{{Bd{e}}}{}{}}000{cBf{}}0<<```{cf{}}0{Ch{{Bd{cCn}}}{}}>>0{{CnCn}Bn}{{ce}Bn{}{}}000{{CnA`}Ab}0{cc{}}{ce{}{}}{{{Ah{c}}}{{Ah{f}}}{}}{{{Aj{c}}}{{Aj{f}}}{}}{{{Al{c}}}{{Al{f}}}{}}{c{{An{e}}}{}{}}{Ch{{Bd{D`Cn}}}}>==<{{{Db{Ch}}}{{Bd{lCn}}}}6````````{{cb}d{}}00======{DdDf}888888{{DdD`}Df}``{DfDf}{D`D`}{DdDd}{{ce}d{}{}}00{{Ddl}Df}0{c{{Bd{Df}}}Bl}{c{{Bd{D`}}}Bl}8{{DfDf}Bn}{{D`D`}Bn}{{ce}Bn{}{}}0000000{{cC`}{{Bd{CbCd}}}{}}0{{DfA`}Ab}0{{D`A`}Ab}0{{DdA`}Ab}{cc{}}00000``{ce{}{}}00{{{Ah{c}}}{{Ah{f}}}{}}00{{{Aj{c}}}{{Aj{f}}}{}}00{{{Al{c}}}{{Al{f}}}{}}00{c{{An{e}}}{}{}}00`{{ll}Dd}{Ddj}``{{Ddl}Df}{{Dfc}BdCj}{{D`c}BdCj}`999{cl{}}0{c{{Bd{e}}}{}{}}00000{cBf{}}00<<<``````{{cb}d{}}00{{AdBj}Ad}{{Ad{Dh{Bj}}}Ad}{{DjDf}Ad}{{Djn}Ad}{cf{}}00000{ce{}{}}00000`{DlDl}{AdAd}{DjDj}{{ce}d{}{}}00{{}Dl}{{}Dj}{Dj{{Dh{Bj}}}}{{DlDl}Bn}{{AdAd}Bn}{{ce}Bn{}{}}0000000{{DlA`}Ab}{{AdA`}Ab}{{DjA`}Ab}{cc{}}00{{}Ad}111{DfAd}{BjAd}{{{Dh{Bj}}}Ad}{ce{}{}}00{{{Ah{c}}}{{Ah{f}}}{}}00{{{Aj{c}}}{{Aj{f}}}{}}00{{{Al{c}}}{{Al{f}}}{}}00{c{{An{e}}}{}{}}00{{DjD`{Bd{dl}}}Ad}``{{AdDf}d}666``{c{{Bd{e}}}{}{}}00000{cBf{}}00888```````{{cb}d{}}{cf{}}0::{DnDn}{{ce}d{}{}}{{Dnl}{{E`{Cf{Dh{Cf}}}}}}{Dn{{Dh{l}}}}`{{Dnl}Cf}{{DnDn}Bn}{{ce}Bn{}{}}000{{DnA`}Ab}{cc{}}0`{ce{}{}}{{{Ah{c}}}{{Ah{f}}}{}}{{{Aj{c}}}{{Aj{f}}}{}}{{{Al{c}}}{{Al{f}}}{}}{c{{An{e}}}{}{}}{{DnCh}Bn}{{DnlEb}Cf}{DnCh}`{{ll}{{E`{DnCf}}}}{{Dnll}Cf}9{c{{Bd{e}}}{}{}}0{cBf{}};``````````````{{cb}d{}}000{cf{}}000000000==========`{{ll}Cf}`00{EbEb}{CfCf}{EdEd}{nn}{{ce}d{}{}}000{c{{Bd{Eb}}}Bl}{c{{Bd{Cf}}}Bl}{c{{Bd{Ed}}}Bl}{c{{Bd{n}}}Bl}{{EbEb}Bn}{{CfCf}Bn}{{EdEd}Bn}{{ce}Bn{}{}}00000000000{{cC`}{{Bd{CbCd}}}{}}000{{EbA`}Ab}{{CfA`}Ab}0{{EdA`}Ab}0{{nA`}Ab}0{cc{}}00000000{ce{}{}}0000{{{Ah{c}}}{{Ah{f}}}{}}0000{{{Aj{c}}}{{Aj{f}}}{}}0000{{{Al{c}}}{{Al{f}}}{}}0000{c{{An{e}}}{}{}}0000``{{lll}Cf}{lEf}{{Efjl}n}{{EfCf}n}{{Efl{Dh{Cf}}}n}{{Efj}n}{{EfEd}n}{{llEb}Cf}{{Ebc}BdCj}{{Cfc}BdCj}{{Edc}BdCj}{{nc}BdCj}````{ce{}{}}000{cl{}}00{c{{Bd{e}}}{}{}}000000000{cBf{}}000033333`{{cb}d{}}{cf{}}055{EhEh}{{ce}d{}{}}{cc{}}08{{{Ah{c}}}{{Ah{f}}}{}}{{{Aj{c}}}{{Aj{f}}}{}}{{{Al{c}}}{{Al{f}}}{}}{c{{An{e}}}{}{}}{lEh}{{EhBbAf}{{Bd{dl}}}}{{EhBbB`Af}{{Bd{dl}}}}{{EhlAf}{{Bd{dl}}}}{{Ej{Aj{{En{El}}}}Af}d}{{B`Bb{Aj{{En{El}}}}Af}{{Dh{Ej}}}}`{ce{}{}}{c{{Bd{e}}}{}{}}0{cBf{}}2``{{cb}d{}}{cf{}}000{{ElB`ChCh}{{Bd{{Dh{Ej}}l}}}}`5555`{EjEj}{{ce}d{}{}}{{ElChB`ChCh}{{Bd{{Dh{Ej}}l}}}}3{{EjA`}Ab}{cc{}}00{{ElB`}{{F`{l}}}};;{{{Ah{c}}}{{Ah{f}}}{}}0{{{Aj{c}}}{{Aj{f}}}{}}0{{{Al{c}}}{{Al{f}}}{}}0{c{{An{e}}}{}{}}0``{lEl}{{El{Dh{l}}Cf}{{Dh{Ej}}}}{{ElB`Df}{{Dh{Ej}}}}{{ElB`}{{Dh{Ej}}}}`{ce{}{}}{c{{Bd{e}}}{}{}}000{cBf{}}0{{ElB`ChChl}{{Bd{{Dh{Ej}}l}}}}0{{ElB`ChCh}{{Bd{dl}}}}44`{{cb}d{}}{FbB`}`{cf{}}077`{FbFb}{{ce}d{}{}}{{Fbl}d}{Fb{{F`{Ch}}}}{Fbd}{{FbFb}Bn}{{ce}Bn{}{}}000{{FbA`}Ab}{cc{}}0{ce{}{}}{{{Ah{c}}}{{Ah{f}}}{}}{{{Aj{c}}}{{Aj{f}}}{}}{{{Al{c}}}{{Al{f}}}{}}{c{{An{e}}}{}{}}{FbBn}{FbCh}`{{B`ll}Fb}1`7{c{{Bd{e}}}{}{}}0{cBf{}}{{FbB`ChCh}Bn}:","c":[],"p":[[5,"Private",660],[1,"unit"],[10,"Any",661],[5,"Client",10],[1,"usize"],[5,"String",662],[5,"ServerMessage",382],[5,"Formatter",663],[8,"Result",663],[5,"StateUpdateResult",245],[5,"Context",664],[5,"Box",665],[5,"Arc",666],[5,"Rc",667],[5,"Request",668],[5,"Address",669],[5,"Message",670],[6,"Result",671],[5,"TypeId",661],[5,"InnerInfo",41],[6,"Info",41],[10,"Deserializer",672],[1,"bool"],[10,"Serializer",673],[5,"Ok",673],[5,"Error",674],[5,"ChatEvent",382],[1,"str"],[10,"Serializer",675],[5,"IOProcessWrapper",669],[6,"ParseError",112],[6,"ClientRequestKind",141],[1,"slice"],[5,"RequestBuilder",141],[5,"ClientRequest",141],[5,"Vec",676],[5,"State",245],[6,"WaitingFor",245],[5,"Chat",345],[1,"tuple"],[6,"ChatEventKind",382],[6,"ServerMessageKind",382],[5,"ServerMessageBuilder",382],[5,"Server",542],[5,"RoutedMessage",569],[5,"State",569],[5,"Mutex",677],[6,"Option",678],[5,"User",621],[8,"RequestResponse",382]],"b":[[73,"impl-Display-for-InnerInfo"],[74,"impl-Debug-for-InnerInfo"],[75,"impl-Debug-for-Info"],[76,"impl-Display-for-Info"],[78,"impl-From%3CMessage%3E-for-Info"],[79,"impl-From%3CChatEvent%3E-for-Info"],[80,"impl-From%3C%26str%3E-for-Info"],[126,"impl-Display-for-ParseError"],[127,"impl-Debug-for-ParseError"],[191,"impl-Debug-for-ClientRequest"],[192,"impl-Display-for-ClientRequest"],[193,"impl-Display-for-ClientRequestKind"],[194,"impl-Debug-for-ClientRequestKind"],[457,"impl-Debug-for-ChatEvent"],[458,"impl-Display-for-ChatEvent"],[459,"impl-Display-for-ServerMessageKind"],[460,"impl-Debug-for-ServerMessageKind"],[461,"impl-Debug-for-ServerMessage"],[462,"impl-Display-for-ServerMessage"]]}],\
["dsbuild",{"doc":"Framework for building distributed systems with support for","t":"FFFFKFFFFCOOOOOOOOOOOMMMOOOOOCOOOOOCOCCCFGPPNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNONNNNNNNNNNNONNNNNNNNNNNNNNNNNONNNNOONNNNNNNNNNFFKFGFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNOOONNOONNNNNNNNNNNNNNNNNNNNNNNNOCCCCCCFNONNNNNNNNNNNNNNONNNNNNNNNNNNNNFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCONNOOONNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCCOOOOOOOONNNNNNNNNNFNNNNNNNNNNNNONNNNNNNNNNNNNNNNNKFFNNNONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONONNNNOMNNNNNNNNNNNGPPNNNNNHNNNNNHHHNNNNGPFFFPPGNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONOOONOOOOOONNNNNNNNNNNNNNNNNNNNNFNNNNNNOONNNNOOONOONONONNNNFNNNNNNNNNNNNNOONNNNNCCCCFFNNNNNNNNNNNNONNNNONNNNNNNNNNONNNNNNNNNNNNNNNNNNNNFNNONNNNNNNNNNNNNNNNNOONNNNFNNNNNNNNNNNNNNNONNNONNNNONFNNNNNNNNNONNNNNNNNONNNNNNNNNNNNN","n":["Address","Context","IOProcessWrapper","Message","Process","ProcessGuard","ProcessWrapper","RealSystem","VirtualSystem","common","context_variant","data","from_process_receiver","host","host","inner","inner","max_buffer_size","network_receiver","network_sender","node_manager","on_local_message","on_message","on_timer","port","port","process_name","process_ref","process_senders","real","receiver","scheduled","sender","tip","to_system_sender","virt","wrapper","context","message","process","Context","ContextVariant","Real","Virtual","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","cancel_timer","clone","clone","clone_into","clone_into","context_variant","from","from","from_ref","from_ref","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_request","into_request","new_real","new_virt","send","send_local","send_reliable","send_reliable_timeout","set_timer","set_timer_once","sleep","spawn","stop","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Message","RoutedMessage","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","borrow_new","clone","clone","clone_into","clone_into","cmp","compare","data","eq","eq_with_dyn","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","from","from","from","from","from_ref","from_ref","get_data","get_raw_data","get_tip","hash","hash_with_dyn","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_request","into_request","msg","new","new_raw","partial_cmp","serialize","tip","to","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Address","IOProcessWrapper","Process","ProcessGuard","ProcessState","ProcessWrapper","Running","Stopped","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deserialize","eq","eq","eq_with_dyn","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","fmt","from","from","from","from","from","from_ref","from_ref","from_ref","hash","hash_with_dyn","host","inner","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","into_request","into_request","new","new_node_address","new_ref","on_local_message","on_message","on_timer","partial_cmp","port","process_name","process_ref","read","read","receiver","sender","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","wrapper","context","messenger","network","process","system","timer","RealContext","__clone_box","address","as_any","as_any_mut","borrow","borrow_mut","cancel_timer","clone","clone_into","from","from_ref","into","into_any","into_any_arc","into_any_rc","into_request","output","send","send_local","send_reliable","send_reliable_timeout","set_timer","set_timer_once","sleep","spawn","stop","to_owned","try_from","try_into","type_id","vzip","GRpcMessenger","MessagePassingService","ProcessSendRequest","ProcessSendResponse","__clone_box","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","eq","fmt","fmt","from","from","from","from","from_ref","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","into_request","listen","message","message_passing","receiver_address","send","send_message","send_to","sender_address","status","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","SendMessageRequest","SendMessageResponse","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_request","into_request","message_data","message_passing_client","message_passing_server","message_tip","receiver_host","receiver_port","receiver_process","sender_host","sender_port","sender_process","status","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","MessagePassingClient","__clone_box","accept_compressed","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","inner","into","into_any","into_any_arc","into_any_rc","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","send_message","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","MessagePassing","MessagePassingServer","_Inner","__clone_box","__clone_box","accept_compressed","accept_compression_encodings","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from_arc","from_ref","from_ref","inner","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_make_service","into_request","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","send_compressed","send_compression_encodings","send_message","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","NetworkRequest","SendMessage","Suspend","as_any","as_any_mut","borrow","borrow_mut","from","handle","into","into_any","into_any_arc","into_any_rc","into_request","send_message","send_message_reliable","send_message_reliable_timeout","try_from","try_into","type_id","vzip","FromSystemMessage","NetworkMessage","Output","ProcessManager","ProcessManagerConfig","ProcessStopped","Suspend","ToSystemMessage","__clone_box","address","address","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_context","from","from","from","from","from","from_ref","handle_local_message","handle_message","handle_timer_fired","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","into_request","into_request","local","local_receiver","local_receiver","local_sender","max_buffer_size","network","network_sender","new","output","process","process","run","system","system_receiver","system_receiver","system_sender","timer_mngr","timers_receiver","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","System","add_process","as_any","as_any_mut","borrow","borrow_mut","from","from_process_receiver","host","into","into_any","into_any_rc","into_request","max_buffer_size","network_receiver","network_sender","new","port","process_senders","run","scheduled","spawn","to_system_sender","try_from","try_into","type_id","vzip","TimerManager","as_any","as_any_mut","borrow","borrow_mut","cancel_all_timers","cancel_timer","from","into","into_any","into_any_arc","into_any_rc","into_request","new","pending_timers","sender","set_timer","try_from","try_into","type_id","vzip","context","node","process","system","SendFuture","VirtualContext","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","cancel_timer","clone","clone_into","dslab_ctx","from","from","from_future","from_ref","future","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","into_future","into_request","into_request","node_manager","poll","send","send_local","send_reliable","send_reliable_timeout","set_timer","set_timer_once","sleep","spawn","stop","to_owned","try_from","try_from","try_into","try_into","try_poll","type_id","type_id","vzip","vzip","NodeManager","add_node","add_process_to_node","address_to_name","as_any","as_any_mut","borrow","borrow_mut","check_name","check_node_exists","check_process_exists","construct_full_process_name","default","from","get_full_process_name","get_process_address","into","into_any","into_any_arc","into_any_rc","into_request","name_to_address","node_processes","try_from","try_into","type_id","vzip","VirtualProcessWrapper","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","create_context","from","from_ref","into","into_any","into_any_rc","into_request","new","node_manager","on_local_message","on_message","on_timer","process_state","to_owned","try_from","try_into","type_id","user_process","vzip","System","add_node","add_process","as_any","as_any_mut","borrow","borrow_mut","crash_node","from","get_mut_node","inner","into","into_any","into_any_rc","into_request","is_node_crashed","make_steps","network","new","node_manager","process_names","read_local_messages","received_message_count","recover_node","send_local_message","sent_message_count","step","step_until_local_message","step_until_no_events","try_from","try_into","type_id","vzip"],"q":[[0,"dsbuild"],[37,"dsbuild::common"],[40,"dsbuild::common::context"],[95,"dsbuild::common::message"],[161,"dsbuild::common::process"],[285,"dsbuild::real"],[291,"dsbuild::real::context"],[323,"dsbuild::real::messenger"],[401,"dsbuild::real::messenger::message_passing"],[462,"dsbuild::real::messenger::message_passing::message_passing_client"],[493,"dsbuild::real::messenger::message_passing::message_passing_server"],[554,"dsbuild::real::network"],[575,"dsbuild::real::process"],[682,"dsbuild::real::system"],[709,"dsbuild::real::timer"],[730,"dsbuild::virt"],[734,"dsbuild::virt::context"],[785,"dsbuild::virt::node"],[812,"dsbuild::virt::process"],[839,"dsbuild::virt::system"],[872,"alloc::string"],[873,"core::result"],[874,"dyn_clone::sealed"],[875,"core::any"],[876,"alloc::boxed"],[877,"alloc::sync"],[878,"alloc::rc"],[879,"tonic::request"],[880,"core::future::future"],[881,"core::marker"],[882,"core::any"],[883,"core::cmp"],[884,"dslab_async_mp::process"],[885,"erased_serde::ser"],[886,"erased_serde::ser"],[887,"core::fmt"],[888,"core::fmt"],[889,"serde::de"],[890,"core::hash"],[891,"core::option"],[892,"serde::ser"],[893,"serde::de"],[894,"core::pin"],[895,"tonic::codec::compression"],[896,"tonic::body"],[897,"tonic::client::service"],[898,"tonic::transport::channel"],[899,"tonic::transport::error"],[900,"tonic::transport::channel::endpoint"],[901,"core::convert"],[902,"core::fmt"],[903,"tonic::status"],[904,"tonic::request"],[905,"http::request"],[906,"http::response"],[907,"tower_service"],[908,"tonic::service::interceptor"],[909,"http_body"],[910,"axum::routing::into_make_service"],[911,"core::task::wake"],[912,"core::task::poll"],[913,"tokio::sync::mpsc::bounded"],[914,"std::sync::rwlock"],[915,"core::cell"],[916,"dslab_async_mp::node"],[917,"core::cell"],[918,"alloc::vec"]],"d":["Represents <code>process</code> address, which is used in <code>real system</code> â€¦","Represents proxy, which provides process-system â€¦","Represents process wrapper around user-defined <code>process</code>, â€¦","Represents message, which can be used by <code>processes</code> to â€¦","Represents requirements for every user-defined process.","Represents guard for user-defined <code>process</code>.","Represents wrapper around user-defined <code>process</code>, which â€¦","Represents real system.","Represents virtual system, which is responsible for â€¦","Definition of structures and functions, which are used by â€¦","","","","","Specifies host, which is used to deliver messages to the [â€¦","","","","","","","Called when process starts interaction with system.","Called when process receives message.","Called when previously set timer is fired.","","Specifies port, which is used to deliver messages to the [â€¦","Specifies process name inside of the [real system][â€¦","","","","Allows to receive local messages from the process.","","Allows to send local messages to the process.","","","Definition of structures and functions, which are used in â€¦","","Definition of <code>Context</code>.","Definition of <code>Message</code> which could be passed through â€¦","Definition of trait <code>Process</code> and struct <code>ProcessWrapper</code>.","Represents proxy, which provides process-system â€¦","Represents enum of two context variants - real and virtual.","","","","","","","","","","","","","Cancel timer with specified name.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Create new real context.","Create new virtual context.","Send message to specified address.","Send local message.","Send reliable message to specified address.","Send reliable message to specified address. If message â€¦","Set timer with specified name and delay. If such timer â€¦","Set timer with specified name and delay. If such timer â€¦","Async sleep for some time (sec.).","Spawn asynchronous activity.","Stop the process.","","","","","","","","","","","Represents message, which can be used by <code>processes</code> to â€¦","Represents routed message.","","","","","","","","","","","Create a new message with specified tip and data, which â€¦","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns deserialized messageâ€™s data of template type, â€¦","Returns reference to messageâ€™s raw data.","Returns reference to messageâ€™s tip.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Create a new message with specified tip and data, which â€¦","Create a new message with specified tip and raw data.","","","","","","","","","","","","","","","Represents <code>process</code> address, which is used in <code>real system</code> â€¦","Represents process wrapper around user-defined <code>process</code>, â€¦","Represents requirements for every user-defined process.","Represents guard for user-defined <code>process</code>.","Represents possible states of the user processes inside of â€¦","Represents wrapper around user-defined <code>process</code>, which â€¦","Corresponds running process.","Corresponds to stopped process.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Specifies host, which is used to deliver messages to the [â€¦","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Creates new address instance.","Creates new node address instance with empty process name.","Creates new address instance from string slices.","Called when process starts interaction with system.","Called when process receives message.","Called when previously set timer is fired.","","Specifies port, which is used to deliver messages to the [â€¦","Specifies process name inside of the [real system][â€¦","","Returns guard for read access to user-defined process.","Returns guard for read access to user-defined process. â€¦","Allows to receive local messages from the process.","Allows to send local messages to the process.","","","","","","","","","","","","","","","","","","","","","","","","","","Definition of context-related objects.","Definition of asynchronous messenger <code>GRpcMessenger</code> â€¦","Definition of async network manager.","Definition of process management objects.","Definition of real system.","Definition of time management objects.","Represents context of system in the real mode.","","","","","","","Cancel timer with specified name.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Send network message.","Send local message.","Send network message reliable. It is guaranteed that â€¦","Send network message reliable. If message will not be â€¦","Set timer with specified name and delay. If such timer â€¦","Set timer with specified name and delay. If such timer â€¦","Sleep for some time (sec.).","Spawn asynchronous activity.","Stop the process.","","","","","","","","","Used to pass responses on requests.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Passed message.","","Address of process, which will receive request.","","","","Address of process, which sends request.","Response message from receiver, which indicates whether â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","Enable decompressing responses.","","","","","","","Attempt to create a new client by connecting to a given â€¦","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","","","","","","","","","Generated trait containing gRPC methods that should be â€¦","","","","","Enable decompressing requests with the given encoding.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","Compress responses with the given encoding, if the client â€¦","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","All messages which can be received from system.","","Responsible for process communication with outside. Used â€¦","Proxy between system and process implementation. Calls â€¦","","","","All messages which can be sent to system.","","Address of the process. Used to communicate in network.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Waiters.","","","","","","Create new process manager.","To communicate with outside. Must be passed to real â€¦","Process implementation, provided by user.","","Run cycle of the process manager.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents real system.","Add process with specified name.","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Create new system with specified size of buffers, host and â€¦","","","Run all spawned async activities and all processes. Blocks â€¦","","Schedule asynchronous activity on execution.","","","","","","Responsible for settings and cancelling timers. Not â€¦","","","","","Cancel all pending timers.","Cancel timer with specified name.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Set timer with specified name, delay and overwrite â€¦","","","","","Definition of virtual mode context.","Definition of manager of nodes in virtual system.","Definition of <code>process wrapper</code> which is used in the virtual â€¦","Definition of [<code>VirtualSystem</code>].","Represents future which formally satisfies <code>Send</code> â€¦","Represents context in virtual mode. Responsible for â€¦","","","","","","","","","","Cancel timer with specified name.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Send message to specified address.","Send local message.","Send network message reliable. It is guaranteed that â€¦","Send network message reliable with specified timeout. It â€¦","Set timer with specified name and delay. If such timer â€¦","Set timer with specified name and delay. If such timer â€¦","Async sleep for some time (sec.).","Spawn asynchronous activity.","Stop the process.","","","","","","","","","","","Represents node manager.","Add new node to the manager.","Add new process to the node.","","","","","","Check if the <code>name</code> is valid.","Check if node with such <code>node_name</code> exists.","Check if process with such <code>process_name</code> exists on the node â€¦","Returns full name of the process <code>process_name</code> located on â€¦","","Returns the argument unchanged.","Map process by itâ€™s address into the view â€¦","Map full process name, potentially received from â€¦","Calls <code>U::from(self)</code>.","","","","","","","","","","","Represents virtual process wrapper, which is to be passed â€¦","","","","","","","","Create virtual context, which matches to the virtual â€¦","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Create new virtual process wrapper.","","","","","","","","","","","","Represents virtual system, which is responsible for â€¦","Adds a node to the DSLabSimulation. Note that node names â€¦","Adds a process to the [<code>VirtualSystem</code>].","","","","","Crashes the specified node.","Returns the argument unchanged.","Returns a mutable reference to the node.","","Calls <code>U::from(self)</code>.","","","","Checks if the node is crashed.","Perform <code>steps</code> steps through the DSLabSimulation.","Returns a mutable reference to network.","Create new <code>System</code> with provided <code>seed</code>.","","Returns the names of all processes in the system.","Extracts and returns local messages, produced by the â€¦","Returns the number of messages received by the process.","Recovers the previously crashed node.","Send local message to the process.","Returns the number of messages sent by the process.","Perform single step through the DSLabSimulation.","Steps through the DSLabSimulation until there are no local â€¦","Steps through the DSLabSimulation until there are no â€¦","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,3,2,87,87,7,95,43,87,87,87,95,1,1,1,87,7,7,41,87,0,46,87,46,2,87,0,46,0,0,0,0,0,11,11,11,3,11,3,11,3,11,3,11,3,3,11,3,11,3,3,11,3,11,3,11,3,11,3,11,3,11,3,11,3,3,3,3,3,3,3,3,3,3,3,3,11,3,11,3,11,3,11,3,11,3,0,0,2,24,2,24,2,24,2,24,2,24,2,2,24,2,24,2,2,2,2,2,2,2,2,2,2,2,2,2,24,24,2,24,2,2,2,2,2,2,24,2,24,2,24,2,24,2,24,24,2,2,2,2,2,24,2,24,2,24,2,24,2,24,2,24,0,0,0,0,0,0,40,40,40,41,7,46,43,40,41,7,46,43,40,41,7,46,43,40,41,7,46,43,40,41,7,40,41,7,40,41,7,43,7,40,7,7,7,7,7,7,7,40,7,46,43,40,41,7,40,41,7,7,7,7,43,46,43,40,41,7,46,43,40,41,7,46,40,41,7,46,43,40,41,7,46,43,40,41,7,7,7,7,1,1,1,7,7,7,41,46,41,46,46,7,40,41,7,46,43,40,41,7,46,43,40,41,7,46,43,40,41,7,46,43,40,41,7,46,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,47,51,47,49,48,51,47,49,48,51,47,49,48,51,47,49,48,47,47,48,47,47,49,51,47,49,48,47,51,47,49,48,51,47,49,48,51,47,49,48,51,47,49,48,51,47,49,48,48,51,0,51,48,49,49,51,47,47,51,47,49,48,51,47,49,48,51,47,49,48,51,47,49,48,0,0,52,54,52,54,52,54,52,54,52,54,52,54,52,54,52,54,52,54,52,54,52,54,52,54,52,54,52,54,52,54,52,54,52,54,52,54,52,54,52,0,0,52,52,52,52,52,52,52,54,52,54,52,54,52,54,52,54,52,54,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,78,75,75,75,78,75,78,75,78,75,78,75,75,75,78,75,78,75,78,75,78,75,75,78,75,75,78,75,78,75,78,75,78,75,75,78,75,75,75,75,75,75,75,75,75,75,76,78,75,78,75,78,75,78,75,78,75,75,0,82,82,82,82,82,82,82,0,82,82,82,82,82,0,0,0,82,82,82,82,0,102,0,0,0,103,102,0,84,85,86,102,103,85,86,84,102,103,85,86,84,102,103,85,86,84,102,103,85,86,84,84,84,85,102,103,85,86,84,84,85,85,85,102,103,85,86,84,102,103,85,86,84,102,103,85,86,84,102,103,85,86,84,102,103,85,86,84,84,85,86,86,86,84,86,85,85,85,86,85,84,85,86,86,84,85,84,102,103,85,86,84,102,103,85,86,84,102,103,85,86,84,102,103,85,86,84,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,0,0,0,0,0,17,89,17,89,17,89,17,89,17,17,17,17,17,89,17,89,17,89,89,17,89,17,17,89,17,89,89,17,17,89,17,17,17,17,17,17,17,17,17,17,89,17,89,17,89,89,17,89,17,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,0,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95],"f":"`````````````````````{{bdf}{{l{hj}}}}{{bdnf}{{l{hj}}}}{{bjf}{{l{hj}}}}````````````````````{{cA`}h{}}0{cAb{}}000{ce{}{}}000{{fAd}h}{AfAf}{ff}{{ce}h{}{}}0`{cc{}}00055{{{Ah{c}}}{{Ah{Ab}}}{}}0{{{Aj{c}}}{{Aj{Ab}}}{}}0{{{Al{c}}}{{Al{Ab}}}{}}0{c{{An{e}}}{}{}}0{B`f}{Bbf}{{fdn}h}{{fd}h}{{fdn}{{l{hj}}}}{{fdnBd}{{l{hj}}}}{{fAdBd}h}0{{fBd}h}{{fc}h{{Bh{}{{Bf{h}}}}Bj}}{fh}{ce{}{}}0{c{{l{e}}}{}{}}000{cBl{}}022``{{cA`}h{}}0{cAb{}}0004444{{Adc}{{l{dj}}}Bn}{dd}{C`C`}{{ce}h{}{}}0{{dd}Cb}{{ce}Cb{}{}}`{{dd}Cd}{{cCf}Cd{}}{{ce}Cd{}{}}000{{cCh}{{l{CjCl}}}{}}{{dCn}D`}{cc{}}{Dbd}1`11{d{{l{cj}}}Dd}{d{{Dh{Df}}}}{dj}{{dc}hDj}{{cDj}h{}}{ce{}{}}0{{{Ah{c}}}{{Ah{Ab}}}{}}0{{{Aj{c}}}{{Aj{Ab}}}{}}0{{{Al{c}}}{{Al{Ab}}}{}}0{c{{An{e}}}{}{}}0`{{Adc}{{l{dj}}}Bn}{{Ad{Dh{Df}}}{{l{dj}}}}{{dd}{{Dl{Cb}}}}{{dc}lDn}``88{c{{l{e}}}{}{}}000{cBl{}}0::````````{{cA`}h{}}00{cAb{}}000000000<<<<<<<<<<{E`E`}{{{Eb{c}}}{{Eb{c}}}{Edb}}{nn}{{ce}h{}{}}00{{{Ef{c}}}eb{}}{c{{l{n}}}Eh}{{E`E`}Cd}{{nn}Cd}{{cCf}Cd{}}{{ce}Cd{}{}}000{{cCh}{{l{CjCl}}}{}}{{E`Cn}D`}{{nCn}D`}{cc{}}0000000{{nc}hDj}{{cDj}h{}}``{ce{}{}}0000{{{Ah{c}}}{{Ah{Ab}}}{}}0000{{{Aj{c}}}{{Aj{Ab}}}{}}000{{{Al{c}}}{{Al{Ab}}}{}}0000{c{{An{e}}}{}{}}0000{{jEjj}n}{{jEj}n}{{AdEjAd}n}{{bdf}{{l{hj}}}}{{bdnf}{{l{hj}}}}{{bjf}{{l{hj}}}}{{nn}{{Dl{Cb}}}}```{{{El{c}}}{{Ef{c}}}b}{{{Eb{c}}}{{Ef{c}}}b}``{{nc}lDn}>>>{c{{l{e}}}{}{}}000000000{cBl{}}0000{ce{}{}}0000````````{{cA`}h{}}`{cAb{}}022{{B`Ad}h}{B`B`}{{ce}h{}{}}{cc{}}06{{{Ah{c}}}{{Ah{Ab}}}{}}{{{Aj{c}}}{{Aj{Ab}}}{}}{{{Al{c}}}{{Al{Ab}}}{}}{c{{An{e}}}{}{}}`{{B`dn}h}{{B`d}h}{{B`dn}{{l{hj}}}}{{B`dnBd}{{l{hj}}}}{{B`AdBd}h}0{{B`Bd}h}{{B`c}h{{Bh{}{{Bf{h}}}}Bj}}{B`h}{ce{}{}}{c{{l{e}}}{}{}}0{cBl{}}2````{{cA`}h{}}{cAb{}}000000044444444{EnEn}{{ce}h{}{}}{{}F`}{{EnEn}Cd}{{EnCn}D`}{{FbCn}D`}{cc{}}0000;;;;{{{Ah{c}}}{{Ah{Ab}}}{}}000{{{Aj{c}}}{{Aj{Ab}}}{}}000{{{Al{c}}}{{Al{Ab}}}{}}000{c{{An{e}}}{}{}}000{{jEj{Fd{C`}}}{{l{hj}}}}```{Ff{{l{Enj}}}}{{Fb{An{Fh}}}{{Fj{{Ah{Bh}}}}}}```{ce{}{}}{c{{l{e}}}{}{}}0000000{cBl{}}0002222``{{cA`}h{}}0{cAb{}}0004444{Fhh}{Flh}{FhFh}{FlFl}{{ce}h{}{}}0{{}Fh}{{}Fl}{FhFn}{FlFn}{{FhFh}Cd}{{FlFl}Cd}{{FhCn}D`}{{FlCn}D`}{cc{}}000{ce{}{}}0{{{Ah{c}}}{{Ah{Ab}}}{}}0{{{Aj{c}}}{{Aj{Ab}}}{}}0{{{Al{c}}}{{Al{Ab}}}{}}0{c{{An{e}}}{}{}}0```````````44{c{{l{e}}}{}{}}000{cBl{}}066`{{cA`}h{}}{{{G`{c}}Gb}{{G`{c}}}{{Gf{Gd}}}}{cAb{}}099{{{G`{c}}}{{G`{c}}}Ed}{{ce}h{}{}}{c{{l{{G`{Gh}}Gj}}}{{Gn{Gl}}}}{{{G`{c}}Cn}D`H`}>>`=<;:9{{{G`{c}}Fn}{{G`{c}}}{{Gf{Gd}}}}0{c{{G`{c}}}{{Gf{Gd}}}}7{{{G`{c}}e}{{l{{Hb{Fl}}Hd}}}{{Gf{Gd}}}{{Hf{Fh}}}}{ce{}{}}<<;0{{ce}{{G`{{Hh{ce}}}}}{{I`{{Hj{Gd}}}{{Hl{Hn}}}}{Gf{Gd}}}Ib}{{cId}{{G`{c}}}{{Gf{Gd}}}}```<<{{{If{c}}Gb}{{If{c}}}Ih}`;;;;3333{{c{Hj{e}}}{}{}{}}{{{If{c}}{Hj{e}}}gIh{IjBj}{}}{{{Il{c}}}{{Il{c}}}Ih}{{{If{c}}}{{If{c}}}Ih}=={{{Il{c}}Cn}D`H`}{{{If{c}}Cn}D`{H`Ih}}{cc{}}0{{{Aj{c}}}{{If{c}}}Ih}11`;;{{{Ah{c}}}{{Ah{Ab}}}{}}0{{{Aj{c}}}{{Aj{Ab}}}{}}0{{{Al{c}}}{{Al{Ab}}}{}}0{c{{In{e}}}{}{}}{c{{An{e}}}{}{}}0{{{If{c}}Fn}{{If{c}}}Ih}`0`{c{{If{c}}}Ih}{{{If{c}}J`}{{Jb{{l{he}}}}}Ih{}}{{cJ`}{{Jb{{l{h}}}}}{}}{{{If{c}}Gb}{{If{c}}}Ih}`{{Ih{An{Fh}}}{{Fj{{Ah{Bh}}}}}}{ce{}{}}0{c{{l{e}}}{}{}}000{cBl{}}022{{ce}{{Hh{{If{c}}e}}}IhIb}```{cAb{}}044{cc{}}{{{Fd{C`}}{Jf{Jd}}jEj}h}6{{{Ah{c}}}{{Ah{Ab}}}{}}{{{Aj{c}}}{{Aj{Ab}}}{}}{{{Al{c}}}{{Al{Ab}}}{}}{c{{An{e}}}{}{}}{C`h}{C`{{l{hj}}}}{{C`Bd}{{l{hj}}}}<<;=````````{{cA`}h{}}``::::::::::>>>>>>>>>>{JhJh}{{ce}h{}{}}{Jjf}<<<<<<{{Jjd}h}{{JjC`}h}{{Jjj}h}{ce{}{}}0000>>>>>=====<<<<<;;;;;```````{JlJj}```{Jjh}``````2{c{{l{e}}}{}{}}000000000{cBl{}}000044444`{{Jncj}{{El{c}}}b}{cAb{}}066{cc{}}``7{{{Ah{c}}}{{Ah{Ab}}}{}}{{{Al{c}}}{{Al{Ab}}}{}}{c{{An{e}}}{}{}}```{{FnAdEj}Jn}``{Jnh}`{{Jnc}h{{Bh{}{{Bf{h}}}}Bj}}`::9=`77=={K`h}{{K`Ad}h}8?7{{{Aj{c}}}{{Aj{Ab}}}{}}76{{{Fd{j}}}K`}``{{K`jBdCd}h}??>{ce{}{}}``````{{cA`}h{}}>>>>1111{{BbAd}h}{BbBb}{{ce}h{}{}}`{cc{}}0{e{{Fj{{Ah{{Kb{c}}}}}}}Bj{{Bh{}{{Bf{c}}}}}}1`66{{{Ah{c}}}{{Ah{Ab}}}{}}0:{{{Al{c}}}{{Al{Ab}}}{}}0{c{}{}}{c{{An{e}}}{}{}}0`{{{Fj{{Kb{c}}}}J`}{{Jb{e}}}Bj{}}{{Bbdn}h}{{Bbd}h}{{Bbdn}{{Fj{{Ah{Bh}}}}}}{{BbdnBd}{{Fj{{Ah{Bh}}}}}}{{BbAdBd}h}0{{BbBd}{{Fj{{Ah{Bh}}}}}}{{Bbc}h{{Bh{}{{Bf{h}}}}}}{Bbh}{ce{}{}}{c{{l{e}}}{}{}}000{{{Fj{c}}J`}Jb{}}{cBl{}}033`{{KdjjEj}{{l{hj}}}}{{Kdjj}{{l{nj}}}}`{cAb{}}066{Ad{{l{hj}}}}{{KdAd}Cd}{{KdAdAd}Cd}{{KdAdAd}{{l{jj}}}}{{}Kd}{cc{}}{{Kdn}{{l{jj}}}}{{KdAd}{{l{nj}}}}>{{{Ah{c}}}{{Ah{Ab}}}{}}{{{Aj{c}}}{{Aj{Ab}}}{}}{{{Al{c}}}{{Al{Ab}}}{}}{c{{An{e}}}{}{}}``{c{{l{e}}}{}{}}0{cBl{}}{ce{}{}}`{{cA`}h{}}{cAb{}}022{{{Kf{c}}}{{Kf{c}}}{EdbEd}}{{ce}h{}{}}{{{Kf{c}}Kh}Bb{bEd}}>>5;98{{{Aj{{Kj{c}}}}{Al{{Kl{Kd}}}}}{{Kf{c}}}{bEd}}`{{{Kf{c}}DbKh}{{l{hj}}}{bEd}}{{{Kf{c}}DbjKh}{{l{hj}}}{bEd}}{{{Kf{c}}jKh}{{l{hj}}}{bEd}}`9;;:`9`{{KnAdAdEj}h}{{KnAdcAd}{{Eb{c}}}{bEd}}99;;{{KnAd}h}{cc{}}{{KnAd}{{Dl{{Lb{L`}}}}}}`>{{{Ah{c}}}{{Ah{Ab}}}{}}{{{Al{c}}}{{Al{Ab}}}{}}{c{{An{e}}}{}{}}{{KnAd}Cd}{{KnLd}h}{Kn{{Lb{Lf}}}}{LhKn}`{Kn{{Lj{j}}}}{{KnAdAd}{{Lj{d}}}}{{KnAdAd}Lh}<{{KnAdAdd}h}1{KnCd}{{KnAdAd}{{l{{Lj{d}}j}}}}{Knh}{c{{l{e}}}{}{}}0{cBl{}}{ce{}{}}","c":[],"p":[[10,"Process",161],[5,"Message",95],[5,"Context",40],[1,"unit"],[5,"String",872],[6,"Result",873],[5,"Address",161],[5,"Private",874],[10,"Any",875],[1,"str"],[6,"ContextVariant",40],[5,"Box",876],[5,"Arc",877],[5,"Rc",878],[5,"Request",879],[5,"RealContext",291],[5,"VirtualContext",734],[1,"f64"],[17,"Output"],[10,"Future",880],[10,"Send",881],[5,"TypeId",875],[10,"Serialize",882],[5,"RoutedMessage",95],[6,"Ordering",883],[1,"bool"],[10,"ProcessState",884],[10,"Serializer",885],[5,"Ok",885],[5,"Error",886],[5,"Formatter",887],[8,"Result",887],[5,"Message",888],[10,"Deserialize",889],[1,"u8"],[1,"slice"],[10,"Hasher",890],[6,"Option",891],[10,"Serializer",882],[6,"ProcessState",161],[5,"ProcessWrapper",161],[10,"Clone",892],[5,"ProcessGuard",161],[10,"Deserializer",889],[1,"u16"],[5,"IOProcessWrapper",161],[5,"ProcessSendResponse",323],[5,"GRpcMessenger",323],[5,"MessagePassingService",323],[5,"Sender",893],[5,"ProcessSendRequest",323],[5,"SendMessageRequest",401],[5,"Pin",894],[5,"SendMessageResponse",401],[1,"usize"],[5,"MessagePassingClient",462],[6,"CompressionEncoding",895],[8,"BoxBody",896],[10,"GrpcService",897],[5,"Channel",898],[5,"Error",899],[5,"Endpoint",900],[10,"TryInto",901],[10,"Debug",887],[5,"Response",902],[5,"Status",903],[10,"IntoRequest",879],[5,"InterceptedService",904],[5,"Request",905],[17,"Response"],[5,"Response",906],[10,"Service",907],[10,"Interceptor",904],[5,"Uri",908],[5,"MessagePassingServer",493],[10,"MessagePassing",493],[10,"Body",909],[5,"_Inner",493],[5,"IntoMakeService",910],[5,"Context",911],[6,"Poll",912],[6,"NetworkRequest",554],[5,"Receiver",893],[5,"Output",575],[5,"ProcessManager",575],[5,"ProcessManagerConfig",575],[5,"System",682],[5,"TimerManager",709],[5,"SendFuture",734],[5,"NodeManager",785],[5,"VirtualProcessWrapper",812],[5,"Context",913],[5,"RwLock",914],[5,"RefCell",915],[5,"System",839],[5,"Node",916],[5,"RefMut",915],[1,"u32"],[5,"Network",917],[1,"u64"],[5,"Vec",918],[6,"FromSystemMessage",575],[6,"ToSystemMessage",575]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
