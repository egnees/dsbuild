var searchIndex = JSON.parse('{\
"dsbuild":{"doc":"Framework for building distributed systems with support for","t":"DEINDIDDDDDKAMMMMMMMMMMMKKKMMMAMMMAMMKKKKMMAMAAAANNNENNEENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMIKKKKKDLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLNIDEDNNLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLKKKMLLLLLLLLLLLLLLLAAADSLLLLLLLMLLLLLLLLMLLLLMLLLLLLSSSSSSSSDLLLLLLLMLLLLLLLLLMLMMMLLLLMLLLLLLSSDSLLLLLLLLLLLLLLMLLLLLLLLLLAAAAAAENNNLLLLLLLLLLLLLLLLLLLLLMMMMMAAAAAADDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLMMMMMLLLLLLLLLLLLLLLDDLLLLLLLLLMLLLLLLLLLLLLLLALLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMAAMMMMMMMMLLLLLLLLLLDLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLIDDLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLMLLLLMKLLLLLLLLLLLDLLLLLLLLLLLLLMLLLLLIKKDMLLLLLLLLLLLMLLLLLLLIKKDLMLLLLLLLLLLLLLLLMLLLLLDLMLLLLLLLLLLLLLLLLMLLLLLLLLLCESSNDDLLLLLLLLLLLLLLMMLLLLLMMLLLLLLLLLLLLLLMMMLLLLMMMMMLMLLLLLLLLLLLLLMAAAADLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLDDLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLIKAAADLLLLLLLLLLLLLLLLLLLLMMLLLLMLDLMLLLLLLLLLLLLLLMLLLLLLLLLDLLLLLLLLLLMLLLLLLLLLLLLLLLLLL","n":["Address","AddressResolvePolicy","Context","Manual","Message","Process","ProcessGuard","ProcessWrapper","RealSystem","RealSystemConfig","VirtualSystem","cancel_timer","common","data","event_buffer_size","event_buffer_size","host","host","host","inner","inner","max_threads","max_threads","network_manager","on_message","on_start","on_timer","port","port","port","process_lib","process_manager","process_name","process_ref","real_mode","resolve_policy","resolver","send_message","set_timer","set_timer_once","stop_process","time_manager","tip","virtual_mode","resolve_list","actions","context","message","process","Immediately","MessageSent","OverrideExisting","ProcessAction","ProcessStopped","SetOnce","StopPolicy","TimerBehavior","TimerCancelled","TimerSet","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","behavior","delay","from","msg","policy","process_name","process_name","process_name","timer_name","timer_name","to","Context","cancel_timer","send_message","set_timer","set_timer_once","stop_process","Message","__clone_box","as_any","as_any_mut","borrow","borrow_mut","borrow_new","clone","clone_into","cmp","compare","data","eq","eq_with_dyn","equivalent","equivalent","equivalent","equivalent","erased_serialize","fmt","from","from","from_ref","get_data","get_raw_data","get_tip","hash","hash_with_dyn","into","into_any","into_any_arc","into_any_rc","into_request","new","new_raw","partial_cmp","serialize","tip","to_owned","try_from","try_into","type_id","vzip","Initialized","Process","ProcessGuard","ProcessState","ProcessWrapper","Running","Stopped","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","eq","fmt","from","from","from","from_ref","from_ref","inner","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","on_message","on_start","on_timer","process_ref","read","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","isolated","ping","pong","IsolatedProcess","TIMER_NAME","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","fired_cnt","from","from_ref","get_fired_cnt","into","into_any","into_any_arc","into_any_rc","into_request","need_cnt","new","on_message","on_start","on_timer","one_timer_delay","set_timer","to_owned","try_from","try_into","type_id","vzip","ON_LAST_MESSAGE_ACTIONS","ON_MESSAGE_ACTIONS","ON_PING_ACTIONS","ON_START_ACTIONS","ON_TIMER_ACTIONS","PING_TIMER","PING_TIP","PONG_TIP","PingProcess","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","delay","from","from_ref","get_last_pong","into","into_any","into_any_arc","into_any_rc","into_request","is_started","is_started","is_stopped","is_stopped","last_pong","need_cnt","new","on_message","on_start","on_timer","partner","ping","to_owned","try_from","try_into","type_id","vzip","PING_TIP","PONG_TIP","PongProcess","TIMER_NAME","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","from","from_ref","into","into_any","into_any_arc","into_any_rc","into_request","max_inactivity_window","new","on_message","on_start","on_timer","set_timer","to_owned","try_from","try_into","type_id","vzip","events","network","process_manager","real_context","real_system","time","Event","MessageReceived","SystemStarted","TimerFired","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","eq","fmt","from","from_ref","into","into_any","into_any_arc","into_any_rc","into_request","to_owned","try_from","try_into","type_id","vzip","from","msg","process_name","timer_name","to","defs","grpc_messenger","manual_resolver","messenger","network_manager","resolver","Address","ProcessSendRequest","ProcessSendResponse","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","eq","fmt","fmt","fmt","from","from","from","from_ref","from_ref","from_ref","host","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","message","partial_cmp","port","process_name","receiver_address","sender_address","status","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","GRpcMessenger","MessagePassingService","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","default","event_sender","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_request","into_request","listen","message_passing","send","send_message","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SendMessageRequest","SendMessageResponse","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_ref","from_ref","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_request","into_request","message_data","message_passing_client","message_passing_server","message_tip","receiver_host","receiver_port","receiver_process","sender_host","sender_port","sender_process","status","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","MessagePassingClient","__clone_box","accept_compressed","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","connect","fmt","from","from_ref","inner","into","into_any","into_any_arc","into_any_rc","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","send_message","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","MessagePassing","MessagePassingServer","_Inner","__clone_box","__clone_box","accept_compressed","accept_compression_encodings","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from_arc","from_ref","from_ref","inner","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_make_service","into_request","into_request","max_decoding_message_size","max_decoding_message_size","max_encoding_message_size","max_encoding_message_size","new","poll_ready","poll_ready","send_compressed","send_compression_encodings","send_message","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","ManualResolver","add_record","as_any","as_any_mut","borrow","borrow_mut","default","from","from_trusted_list","into","into_any","into_any_arc","into_any_rc","into_request","mapping","resolve","try_from","try_into","type_id","vzip","AsyncMessenger","listen","send","NetworkManager","_phantom","as_any","as_any_mut","borrow","borrow_mut","default","from","into","into_any","into_any_arc","into_any_rc","into_request","listen_handler","send_message","start_listen","stop_listen","try_from","try_into","type_id","vzip","AddressResolver","add_record","resolve","ProcessManager","active_count","active_process","add_process","as_any","as_any_mut","borrow","borrow_mut","default","from","get_process","get_state","handle_event","into","into_any","into_any_rc","into_request","is_active","process_info","stop_process","try_from","try_into","type_id","vzip","RealContext","__clone_box","actions","as_any","as_any_mut","borrow","borrow_mut","cancel_timer","clone","clone_into","from","from_ref","get_actions","into","into_any","into_any_arc","into_any_rc","into_request","new","process_name","send_message","set_timer","set_timer_once","stop_process","to_owned","try_from","try_into","type_id","vzip","Address","AddressResolvePolicy","DEFAULT_EVENT_BUFFER_SIZE","DEFAULT_MAX_THREADS","Manual","RealSystem","RealSystemConfig","add_process","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","event_buffer_size","event_buffer_size","from","from","from","handle_process_action","handle_process_actions","host","host","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","max_threads","max_threads","network_manager","new","new","new_with_buffer_size","new_with_max_threads","port","port","process_manager","resolve_policy","resolver","run","time_manager","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","work","resolve_list","basic_timer_setter","defs","time_manager","timer_setter","BasicTimerSetter","as_any","as_any_mut","borrow","borrow_mut","default","from","into","into_any","into_any_arc","into_any_rc","into_request","set_timer","try_from","try_into","type_id","vzip","SetTimerRequest","TimerFiredEvent","__clone_box","__clone_box","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","delay","fmt","fmt","from","from","from_ref","from_ref","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_request","into_request","process","process","timer_name","timer_name","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","TimeManager","TimerID","__clone_box","_phantom","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","cancel_all_timers","cancel_timer","clone","clone_into","cmp","compare","default","eq","eq_with_dyn","equivalent","equivalent","equivalent","equivalent","fmt","from","from","from_ref","hash","hash_with_dyn","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_request","into_request","new","partial_cmp","pending_timers","process_name","set_timer","timer_name","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","TimerSetter","set_timer","process_wrapper","virtual_context","virtual_system","VirtualProcessWrapper","__clone_box","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","create_context","from","from_ref","handle_process_actions","into","into_any","into_any_arc","into_any_rc","into_request","new","on_local_message","on_message","on_timer","process_name","process_state","to_owned","try_from","try_into","type_id","user_process","vzip","VirtualContext","__clone_box","actions","as_any","as_any_mut","borrow","borrow_mut","cancel_timer","clone","clone_into","from","from_ref","into","into_any","into_any_arc","into_any_rc","into_request","process_name","send_message","set_timer","set_timer_once","stop_process","to_owned","try_from","try_into","type_id","vzip","VirtualSystem","add_node","add_process","as_any","as_any_mut","borrow","borrow_mut","crash_node","from","get_mut_node","get_node","inner","into","into_any","into_any_rc","into_request","network","new","node_is_crashed","nodes","process_names","received_message_count","recover_node","sent_message_count","start","step_until_no_events","try_from","try_into","type_id","vzip"],"q":[[0,"dsbuild"],[44,"dsbuild::AddressResolvePolicy"],[45,"dsbuild::common"],[49,"dsbuild::common::actions"],[119,"dsbuild::common::actions::ProcessAction"],[130,"dsbuild::common::context"],[136,"dsbuild::common::message"],[179,"dsbuild::common::process"],[246,"dsbuild::process_lib"],[249,"dsbuild::process_lib::isolated"],[279,"dsbuild::process_lib::ping"],[321,"dsbuild::process_lib::pong"],[350,"dsbuild::real_mode"],[356,"dsbuild::real_mode::events"],[381,"dsbuild::real_mode::events::Event"],[386,"dsbuild::real_mode::network"],[392,"dsbuild::real_mode::network::defs"],[466,"dsbuild::real_mode::network::grpc_messenger"],[503,"dsbuild::real_mode::network::grpc_messenger::message_passing"],[564,"dsbuild::real_mode::network::grpc_messenger::message_passing::message_passing_client"],[595,"dsbuild::real_mode::network::grpc_messenger::message_passing::message_passing_server"],[656,"dsbuild::real_mode::network::manual_resolver"],[676,"dsbuild::real_mode::network::messenger"],[679,"dsbuild::real_mode::network::network_manager"],[700,"dsbuild::real_mode::network::resolver"],[703,"dsbuild::real_mode::process_manager"],[727,"dsbuild::real_mode::real_context"],[756,"dsbuild::real_mode::real_system"],[827,"dsbuild::real_mode::real_system::AddressResolvePolicy"],[828,"dsbuild::real_mode::time"],[832,"dsbuild::real_mode::time::basic_timer_setter"],[849,"dsbuild::real_mode::time::defs"],[896,"dsbuild::real_mode::time::time_manager"],[952,"dsbuild::real_mode::time::timer_setter"],[954,"dsbuild::virtual_mode"],[957,"dsbuild::virtual_mode::process_wrapper"],[986,"dsbuild::virtual_mode::virtual_context"],[1013,"dsbuild::virtual_mode::virtual_system"],[1043,"alloc::string"],[1044,"core::result"],[1045,"dyn_clone::sealed"],[1046,"core::any"],[1047,"core::fmt"],[1048,"core::fmt"],[1049,"alloc::sync"],[1050,"alloc::rc"],[1051,"tonic::request"],[1052,"core::any"],[1053,"core::cmp"],[1054,"dslab_mp::process"],[1055,"erased_serde::ser"],[1056,"erased_serde::ser"],[1057,"dslab_mp::message"],[1058,"serde::de"],[1059,"core::hash"],[1060,"core::option"],[1061,"serde::ser"],[1062,"tokio::sync::mpsc::bounded"],[1063,"core::future::future"],[1064,"core::pin"],[1065,"tonic::codec::compression"],[1066,"tonic::body"],[1067,"tonic::client::service"],[1068,"tonic::transport::channel"],[1069,"tonic::transport::error"],[1070,"tonic::transport::channel::endpoint"],[1071,"core::convert"],[1072,"core::fmt"],[1073,"tonic::status"],[1074,"tonic::request"],[1075,"http::request"],[1076,"tower_service"],[1077,"tonic::service::interceptor"],[1078,"http_body"],[1079,"core::marker"],[1080,"axum::routing::into_make_service"],[1081,"core::task::wake"],[1082,"core::task::poll"],[1083,"alloc::vec"],[1084,"core::default"],[1085,"std::sync::rwlock"],[1086,"std::sync::rwlock"],[1087,"dslab_mp::node"],[1088,"core::cell"],[1089,"core::cell"]],"d":["Represents <code>process</code> address, which is used in <code>real system</code> …","Represents policy for resolving <code>network address</code> by <code>process</code> …","Represents proxy, which provides process-system …","Only processes with names correspondsaddresses in …","Represents message, which can be used by <code>processes</code> to …","Represents requirements for every user-defined process.","Represents guard for user-defined <code>process</code>.","Represents wrapper around user-defined <code>process</code>, which …","Represents real system, which is responsible for …","Represents configuration of <code>RealSystem</code>.","Represents virtual system, which is responsible for …","Cancel timer with certain name. If there is no such timer, …","Definition of structures and functions, which are used by …","","Max size of buffer of pending events inside of the …","Corresponds to <code>RealSystemConfig::event_buffer_size</code>.","Host which will be used by <code>RealSystem</code> to listen for the …","Corresponds to <code>RealSystemConfig::host</code>, which is used by …","Specifies host, which is used to deliver messages to the …","","","Max number of threads which will be used to handle events …","Corresponds to <code>RealSystemConfig::max_threads</code>.","Represents network_manager, which is used to work with …","Called when process receives message.","Called when process starts interaction with system.","Called when previously set timer is fired.","Port which will be used by <code>RealSystem</code> to listen for the …","Corresponds to <code>RealSystemConfig::port</code>, which is used by …","Specifies port, which is used to deliver messages to the …","Collection of distributed <code>process</code> implementations, which …","Represents process manager, which is used to manage …","Specifies process name inside of the real system instance.","","Definition of structures and functions, which are used in …","Policy for resolving network addresses by process name.","Represents network address resolver, which is configured …","Send message to another process.","Sets a timer with overriding delay of existing one.","Sets a timer without overriding delay of existing one.","Stop the process.","Represents time_manager, which is used to work with time …","","Definition of structures and functions, which are used in …","List of process names and their addresses, which will be …","Definition of user process actions.","Definition of trait <code>Context</code>.","Definition of <code>Message</code> which could be passed through …","Definition of trait <code>Process</code> and struct <code>ProcessWrapper</code>.","Stop immediately and ignore all pending and further events.","Specifies message sent action.","Override the existing timer delay.","Specifies actions which can be caused by user process.","Specifies user request to stop the process.","Do not override the existing timer delay.","Specifies system policy on stopping user process.","Specifies the behavior of timer set in the presence of …","Specifies timer canceling action.","Specifies timer establishment action.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specifies behavior of timer in case of such timer already …","Delay of timer in seconds.","Name of process-sender of message.","Message which was sent.","Specifies policy on stopping process.","Name of process which set the timer.","Name of process which cancelled the timer.","Name of process, requested to stop.","Name of timer.","Name of timer.","Name of process-receiver of message.","Represents proxy, which provides process-system …","Cancel timer with certain name. If there is no such timer, …","Send message to another process.","Sets a timer with overriding delay of existing one.","Sets a timer without overriding delay of existing one.","Stop the process.","Represents message, which can be used by <code>processes</code> to …","","","","","","Create a new message with specified tip and data, which …","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns deserialized message’s data of template type, …","Returns reference to message’s raw data.","Returns reference to message’s tip.","","","Calls <code>U::from(self)</code>.","","","","","Create a new message with specified tip and data, which …","Create a new message with specified tip and raw data.","","","","","","","","","Corresponds to initial state of the process.","Represents requirements for every user-defined process.","Represents guard for user-defined <code>process</code>.","Represents possible states of the user processes inside of …","Represents wrapper around user-defined <code>process</code>, which …","Corresponds to state when the process is running.","Corresponds to state when the process is stopped.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Called when process receives message.","Called when process starts interaction with system.","Called when previously set timer is fired.","","Returns guard for read access to user-defined process. …","","","","","","","","","","","","","","","Implementation of <code>IsolatedProcess</code>.","Implementation of <code>PingProcess</code>.","Implementation of <code>PongProcess</code>.","Isolated process is not connected to the network. It just …","Name of the timer.","","","","","","","","Count of already fired timers.","Returns the argument unchanged.","","Returns the number of fired timers count.","Calls <code>U::from(self)</code>.","","","","","Number of timers which must fire before the process will …","Creates new isolated process with specified number of …","Isolated process doesn’t send any messages and should …","Called when system is started. Sets the first timer.","Called when timer is fired. If after that number of …","One timer delay.","Assistant function which sets timer with specified delay …","","","","","","Number of actions, which process will do during handling …","Number of actions, which process will do during handling …","Number of actions, which process will do during ping.","Number of actions, which process will do during start.","Number of actions, which process will do during handling …","Name of the timer, which fires if pong response do not …","Name of ping message tip.","Name of pong message tip.","<code>PingProcess</code> sends consecutive ping messages to the partner …","","","","","","","","Specifies delay between consecutive pings.","Returns the argument unchanged.","","Returns last received pong number.","Calls <code>U::from(self)</code>.","","","","","Allows to check whether the process is started.","Indicates whether the process is started.","Allows to check whether the process is stopped.","Indicates whether the process is stopped.","Specifies number of last received pong, initially equals …","The number of pongs, which are needed to be received.","Creates new <code>PingProcess</code> with delay, partner process name …","Called when message is received. If received message tip …","Called when system is started. Pings partner process.","Called when timer is fired. Retries to send ping message …","Specifies name of partner process, which must send pongs …","Performs ping action.","","","","","","Name of ping message tip.","Name of pong message tip.","<code>PongProcess</code> waits for messages with tip equals to <code>PING_TIP</code>,","Name of times, which fires after inactivity window.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Window of inactivity after that pong process will be …","Creates new <code>PongProcess</code> with specified inactivity window …","Called when message is received. Checks if message tip is …","Called when system is started. Sets inactivity window …","Called when timer is fired and stops the process.","Assistant function which sets timer with specified delay …","","","","","","Definition of events inside of the system in real mode.","Defines modules in which collected structures and methods …","Definition of <code>ProcessManager</code>, which is responsible for …","Definition of <code>RealContext</code>.","Definition of <code>RealSystem</code> and <code>RealSystemConfig</code>.","","Specifies events appearing in the system in real mode.","Specifies event of receiving message.","Specifies event of system start.","Specifies event of timer firing.","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Definitions which are used in network submodule.","Definition of asynchronous messenger <code>GRpcMessenger</code> …","","Definition of asynchronous messenger <code>AsyncMessenger</code> trait.","","Definition of the <code>AddressResolver</code> which is responsible for …","Represents <code>process</code> address, which is used in <code>real system</code> …","Used to pass requests to some object, which implements …","Used to pass responses on requests.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Specifies host, which is used to deliver messages to the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Passed message.","","Specifies port, which is used to deliver messages to the …","Specifies process name inside of the real system instance.","Address of process, which will receive request.","Address of process, which sends request.","Response message from receiver, which indicates whether …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","Enable decompressing responses.","","","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Limits the maximum size of a decoded message.","Limits the maximum size of an encoded message.","","Compress requests with the given encoding.","","","","","","","","","Generated trait containing gRPC methods that should be …","","","","","Enable decompressing requests with the given encoding.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Limits the maximum size of a decoded message.","","Limits the maximum size of an encoded message.","","","","","Compress responses with the given encoding, if the client …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Asynchronous messenger trait, which is used to send …","Creates future, which execution will lead to sending …","Creates future, which execution will lead to sending …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Adds record of network address to the resolver.","Resolves network address by specified <code>process_name</code>.","Process manager is responsible for managing user processes.","Returns number of active processes.","Number of active processes.","Register process in the <code>ProcessManager</code> with specified …","","","","","","Returns the argument unchanged.","Assistant function for getting reference on process …","Assistant function for getting mutable reference on …","Function is used for handling system events and receiving …","Calls <code>U::from(self)</code>.","","","","Check if process state corresponds to active process.","Holds mapping from process name to (process state, process …","Stop the process with the specified <code>process_name</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Represents policy for resolving <code>network address</code> by <code>process</code> …","Default size of the event buffer inside of the <code>RealSystem</code>.","Default number of threads, which are used to handle events …","Only processes with names correspondsaddresses in …","Represents real system, which is responsible for …","Represents configuration of <code>RealSystem</code>.","Add new user-process to the system. Names of processes …","","","","","","","","","","","","","Alias for <code>RealSystemConfig::new</code> method, which creates new …","Max size of buffer of pending events inside of the …","Corresponds to <code>RealSystemConfig::event_buffer_size</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Handle one process action.","Assistant function which is used to handle process actions …","Host which will be used by <code>RealSystem</code> to listen for the …","Corresponds to <code>RealSystemConfig::host</code>, which is used by …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Max number of threads which will be used to handle events …","Corresponds to <code>RealSystemConfig::max_threads</code>.","Represents network_manager, which is used to work with …","Creates new instance of <code>RealSystemConfig</code>.","Creates new instance of <code>RealSystem</code> from <code>RealSystemConfig</code>.","Alias for <code>RealSystemConfig::new</code> method, which creates new …","Alias for <code>RealSystemConfig::new</code> method, which creates new …","Port which will be used by <code>RealSystem</code> to listen for the …","Corresponds to <code>RealSystemConfig::port</code>, which is used by …","Represents process manager, which is used to manage …","Policy for resolving network addresses by process name.","Represents network address resolver, which is configured …","Runs the system using asynchronous runtime.","Represents time_manager, which is used to work with time …","","","","","","","","","","","","","Returns future which execution will lead to loop, in which …","List of process names and their addresses, which will be …","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Definition of <code>VirtualSystem</code>.","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Represents virtual system, which is responsible for …","Adds a node to the simulation.","Adds a process to the <code>VirtualSystem</code>.","","","","","Crashes the specified node.","Returns the argument unchanged.","Returns a mutable reference to the node.","Returns an immutable reference to the node.","","Calls <code>U::from(self)</code>.","","","","Returns a mutable reference to network.","Creates new <code>VirtualSystem</code> with provided <code>seed</code>.","Checks if the node is crashed.","Returns a list of node names in the simulation.","Returns the names of all processes in the system.","Returns the number of messages received by the process.","Recovers the previously crashed node.","Returns the number of messages sent by the process.","Start process Call on_start method of process","Steps through the simulation until there are no pending …","","","",""],"i":[0,0,0,91,0,0,0,0,0,0,0,4,0,3,92,90,92,90,44,102,38,92,90,90,37,37,37,92,90,44,0,90,44,35,0,92,90,4,4,4,4,90,3,0,108,0,0,0,0,10,11,9,0,11,9,0,0,11,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,9,10,11,109,109,110,110,111,109,112,111,109,112,110,0,4,4,4,4,4,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,34,0,0,0,0,34,34,34,35,38,34,35,38,34,35,38,34,35,38,34,35,34,35,34,35,38,34,34,38,34,35,34,35,38,38,34,35,38,34,35,34,35,38,34,35,38,34,35,37,37,37,35,35,34,35,38,34,35,38,34,35,38,34,35,38,34,35,0,0,0,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,41,41,41,41,41,41,41,41,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,42,42,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,0,0,0,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,113,113,114,114,113,0,0,0,0,0,0,0,0,0,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,45,44,44,44,45,45,46,44,45,46,44,45,46,44,45,46,44,45,46,44,45,46,0,0,48,47,48,47,48,47,48,47,47,48,48,48,47,48,47,48,47,48,47,48,47,48,47,47,0,47,48,48,47,48,47,48,47,48,47,0,0,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,0,0,53,53,53,53,53,53,53,54,53,54,53,54,53,54,53,54,53,54,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,77,73,73,73,77,73,77,73,77,73,77,73,73,73,77,73,77,73,77,73,77,73,73,77,73,73,77,73,77,73,77,73,77,73,73,77,73,73,73,73,73,73,73,73,73,73,74,77,73,77,73,77,73,77,73,77,73,73,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,85,85,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,115,115,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,0,0,92,92,91,0,0,90,91,92,90,91,92,90,91,92,90,91,92,90,92,92,90,91,92,90,90,90,92,90,91,92,90,91,92,90,91,92,91,92,90,91,92,90,92,90,90,92,90,92,92,92,90,90,92,90,90,90,91,92,90,91,92,90,91,92,90,91,92,90,90,108,0,0,0,0,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,0,0,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,94,95,0,0,98,96,98,96,98,96,98,96,98,96,96,96,98,98,98,98,96,98,98,98,98,98,98,98,98,96,98,98,98,98,96,98,96,98,96,98,96,98,96,96,98,96,98,96,98,98,98,96,98,96,98,96,98,96,0,97,0,0,0,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,0,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102],"f":[0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],0,0,0,0,0,0,0,0,0,0,0,0,[[-1,3,1,4],[[5,[2,1]]],[]],[[-1,4],[[5,[2,1]]],[]],[[-1,1,4],[[5,[2,1]]],[]],0,0,0,0,0,0,0,0,0,0,[[-1,3,1],2,[]],[[-1,1,6],2,[]],[[-1,1,6],2,[]],[-1,2,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,7],2,[]],[[-1,7],2,[]],[[-1,7],2,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,9],[10,10],[11,11],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[9,12],13],[[10,12],13],[[11,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,3,1],2,[]],[[-1,1,6],2,[]],[[-1,1,6],2,[]],[-1,2,[]],0,[[-1,7],2,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[19,-1],[[5,[3,1]]],20],[3,3],[[-1,-2],2,[],[]],[[3,3],21],[[-1,-2],21,[],[]],0,[[3,3],22],[[-1,23],22,[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,24],[[5,[25,26]]],[]],[[3,12],13],[27,3],[-1,-1,[]],[-1,-1,[]],[3,[[5,[-1,1]]],28],[3,[[30,[29]]]],[3,1],[[3,-1],2,31],[[-1,31],2,[]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],[[19,-1],[[5,[3,1]]],20],[[19,[30,[29]]],[[5,[3,1]]]],[[3,3],[[32,[21]]]],[[3,-1],5,33],0,[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,7],2,[]],[[-1,7],2,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[34,34],[[[35,[-1]]],[[35,[-1]]],[36,37]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[38,[-1]]],[],37],[[34,34],22],[[34,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[-1,3,1,4],[[5,[2,1]]],[]],[[-1,4],[[5,[2,1]]],[]],[[-1,1,4],[[5,[2,1]]],[]],0,[[[35,[-1]]],[[38,[-1]]],37],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,7],2,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,39],[[-1,-2],2,[],[]],0,[-1,-1,[]],[-1,-1,[]],[39,40],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],0,[[40,6],39],[[39,3,1,4],[[5,[2,1]]]],[[39,4],[[5,[2,1]]]],[[39,1,4],[[5,[2,1]]]],0,[[39,4],2],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[-1,7],2,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[41,41],[[-1,-2],2,[],[]],0,[-1,-1,[]],[-1,-1,[]],[41,40],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],[41,22],0,[41,22],0,0,0,[[6,1,40],41],[[41,3,1,4],[[5,[2,1]]]],[[41,4],[[5,[2,1]]]],[[41,1,4],[[5,[2,1]]]],0,[[41,4],2],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,[[-1,7],2,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,42],[[-1,-2],2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],0,[6,42],[[42,3,1,4],[[5,[2,1]]]],[[42,4],[[5,[2,1]]]],[[42,1,4],[[5,[2,1]]]],[[42,4],2],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[-1,7],2,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[43,43],[[-1,-2],2,[],[]],[[43,43],22],[[43,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,7],2,[]],[[-1,7],2,[]],[[-1,7],2,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[44,44],[45,45],[46,46],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[44,44],22],[[45,45],22],[[46,46],22],[[44,12],13],[[45,12],13],[[46,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,[[44,44],[[32,[21]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],47],0,[[48,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[1,49,[50,[43]]],[[52,[[14,[51]]]]]],0,[45,[[52,[[14,[51]]]]]],[[48,[17,[53]]],[[52,[[14,[51]]]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,7],2,[]],[[-1,7],2,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[53,2],[54,2],[53,53],[54,54],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],53],[[],54],[53,55],[54,55],[[53,53],22],[[54,54],22],[[53,12],13],[[54,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,7],2,[]],[[[56,[-1]],57],[[56,[-1]]],[[59,[58]]]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[56,[-1]]],[[56,[-1]]],36],[[-1,-2],2,[],[]],[-1,[[5,[[56,[60]],61]]],[[63,[62]]]],[[[56,[-1]],12],13,64],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],[[[56,[-1]],55],[[56,[-1]]],[[59,[58]]]],[[[56,[-1]],55],[[56,[-1]]],[[59,[58]]]],[-1,[[56,[-1]]],[[59,[58]]]],[[[56,[-1]],57],[[56,[-1]]],[[59,[58]]]],[[[56,[-1]],-2],[[5,[[65,[54]],66]]],[[59,[58]]],[[67,[53]]]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],[[-1,-2],[[56,[[68,[-1,-2]]]]],[[70,[[69,[58]]]],[59,[58]]],71],[[-1,72],[[56,[-1]]],[[59,[58]]]],0,0,0,[[-1,7],2,[]],[[-1,7],2,[]],[[[73,[-1]],57],[[73,[-1]]],74],0,[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[73,[-1]],[69,[-2]]],[],74,[75,76]],[[-1,[69,[-2]]],[],[],[]],[[[77,[-1]]],[[77,[-1]]],74],[[[73,[-1]]],[[73,[-1]]],74],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[[77,[-1]],12],13,64],[[[73,[-1]],12],13,[64,74]],[-1,-1,[]],[-1,-1,[]],[[[15,[-1]]],[[73,[-1]]],74],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[78,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[[73,[-1]],55],[[73,[-1]]],74],0,[[[73,[-1]],55],[[73,[-1]]],74],0,[-1,[[73,[-1]]],74],[[-1,79],[[80,[[5,[2]]]]],[]],[[[73,[-1]],79],[[80,[[5,[2]]]]],74],[[[73,[-1]],57],[[73,[-1]]],74],0,[[-1,[17,[53]]],[[52,[[14,[51]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2],[[68,[[73,[-1]],-2]]],74,71],0,[[81,44],[[5,[2,1]]]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],81],[-1,-1,[]],[[[82,[44]]],[[5,[81,1]]]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],0,[[81,19],[[5,[44,1]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,[[1,49,[50,[43]]],[[52,[[14,[51]]]]]],[45,[[52,[[14,[51]]]]]],0,0,[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[83,[-1]]],[84,85]],[-1,-1,[]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],0,[[[83,[-1]],44,44,3],2,85],[[[83,[-1]],1,49,[50,[43]]],[[5,[2,1]]],85],[[[83,[-1]]],2,85],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,[[-1,44],[[5,[2,1]]],[]],[[-1,19],[[5,[44,1]]],[]],0,[86,40],0,[[86,1,[15,[[87,[37]]]]],[[5,[2,1]]]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],86],[-1,-1,[]],[[86,19],[[5,[[88,[37]],1]]]],[[86,19],[[5,[34,1]]]],[[86,43],[[5,[[82,[11]],1]]]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],[34,22],0,[[86,19],[[5,[2,1]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,[[-1,7],2,[]],0,[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[89,1],2],[89,89],[[-1,-2],2,[],[]],[-1,-1,[]],[-1,-1,[]],[89,[[82,[11]]]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],[1,89],0,[[89,3,1],2],[[89,1,6],2],[[89,1,6],2],[89,2],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[90,19,-1],[[5,[[35,[-1]],1]]],37],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[91,1,49],[[5,[92,1]]]],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[90,11,[50,[43]]],[[5,[2,1]]]],[[90,[30,[11]],[50,[43]]],[[5,[2,1]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,0,0,[[55,55,91,1,49],[[5,[92,1]]]],[92,[[5,[90,1]]]],[[55,91,1,49],[[5,[92,1]]]],[[55,91,1,49],[[5,[92,1]]]],0,0,0,0,0,[90,[[5,[2,1]]]],0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[90,[[5,[2,1]]]],0,0,0,0,0,0,[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],93],[-1,-1,[]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],[[94,[50,[43]]],[[52,[[14,[51]]]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,0,[[-1,7],2,[]],[[-1,7],2,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[94,94],[95,95],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,[[94,12],13],[[95,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,7],2,[]],0,[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[96,[-1]]],2,97],[[[96,[-1]],19,19],2,97],[98,98],[[-1,-2],2,[],[]],[[98,98],21],[[-1,-2],21,[],[]],[[],[[96,[-1]]],[84,97]],[[98,98],22],[[-1,23],22,[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[-1,-2],22,[],[]],[[98,12],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[98,-1],2,31],[[-1,31],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[[],[[96,[-1]]],97],[[98,98],[[32,[21]]]],0,0,[[[96,[-1]],[50,[43]],19,19,6,22],2,97],0,[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[94,[50,[43]]],[[52,[[14,[51]]]]]],0,0,0,0,[[-1,7],2,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[99,[-1]]],[[99,[-1]]],[36,37,36]],[[-1,-2],2,[],[]],[[[99,[-1]]],100,[37,36]],[-1,-1,[]],[-1,-1,[]],[[[99,[-1]],[82,[11]],101],2,[37,36]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],[[1,[15,[[87,[-1]]]]],[[99,[-1]]],[37,36]],[[[99,[-1]],27,101],[[5,[2,1]]],[37,36]],[[[99,[-1]],27,1,101],[[5,[2,1]]],[37,36]],[[[99,[-1]],1,101],[[5,[2,1]]],[37,36]],0,0,[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],0,[-1,-2,[],[]],0,[[-1,7],2,[]],0,[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[100,1],2],[100,100],[[-1,-2],2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[15,[-1]]],[[15,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],0,[[100,3,1],2],[[100,1,6],2],[[100,1,6],2],[100,2],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]],0,[[102,19],2],[[102,19,-1,19],[[35,[-1]]],[37,36]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[102,19],2],[-1,-1,[]],[[102,19],[[32,[[104,[103]]]]]],[[102,19],[[32,[[105,[103]]]]]],0,[-1,-2,[],[]],[[[14,[-1]]],[[14,[8]]],[]],[[[16,[-1]]],[[16,[8]]],[]],[-1,[[17,[-2]]],[],[]],[102,[[104,[106]]]],[107,102],[[102,19],22],[102,[[82,[1]]]],[102,[[82,[1]]]],[[102,19],107],[[102,19],2],[[102,19],107],[[102,19,19],2],[102,2],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,18,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"String",1043],[15,"tuple"],[3,"Message",136],[8,"Context",130],[4,"Result",1044],[15,"f64"],[3,"Private",1045],[8,"Any",1046],[4,"TimerBehavior",49],[4,"StopPolicy",49],[4,"ProcessAction",49],[3,"Formatter",1047],[6,"Result",1047],[3,"Box",1048],[3,"Arc",1049],[3,"Rc",1050],[3,"Request",1051],[3,"TypeId",1046],[15,"str"],[8,"Serialize",1052],[4,"Ordering",1053],[15,"bool"],[8,"ProcessState",1054],[8,"Serializer",1055],[3,"Ok",1055],[3,"Error",1056],[3,"Message",1057],[8,"Deserialize",1058],[15,"u8"],[15,"slice"],[8,"Hasher",1059],[4,"Option",1060],[8,"Serializer",1052],[4,"ProcessState",179],[3,"ProcessWrapper",179],[8,"Clone",1061],[8,"Process",179],[3,"ProcessGuard",179],[3,"IsolatedProcess",249],[15,"u32"],[3,"PingProcess",279],[3,"PongProcess",321],[4,"Event",356],[3,"Address",392],[3,"ProcessSendRequest",392],[3,"ProcessSendResponse",392],[3,"GRpcMessenger",466],[3,"MessagePassingService",466],[15,"u16"],[3,"Sender",1062],[8,"Future",1063],[3,"Pin",1064],[3,"SendMessageRequest",503],[3,"SendMessageResponse",503],[15,"usize"],[3,"MessagePassingClient",564],[4,"CompressionEncoding",1065],[6,"BoxBody",1066],[8,"GrpcService",1067],[3,"Channel",1068],[3,"Error",1069],[3,"Endpoint",1070],[8,"TryInto",1071],[8,"Debug",1047],[3,"Response",1072],[3,"Status",1073],[8,"IntoRequest",1051],[3,"InterceptedService",1074],[3,"Request",1075],[8,"Service",1076],[8,"Interceptor",1074],[3,"Uri",1077],[3,"MessagePassingServer",595],[8,"MessagePassing",595],[8,"Body",1078],[8,"Send",1079],[3,"_Inner",595],[3,"IntoMakeService",1080],[3,"Context",1081],[4,"Poll",1082],[3,"ManualResolver",656],[3,"Vec",1083],[3,"NetworkManager",679],[8,"Default",1084],[8,"AsyncMessenger",676],[3,"ProcessManager",703],[3,"RwLock",1085],[3,"RwLockWriteGuard",1085],[3,"RealContext",727],[3,"RealSystem",756],[4,"AddressResolvePolicy",756],[3,"RealSystemConfig",756],[3,"BasicTimerSetter",832],[3,"SetTimerRequest",849],[3,"TimerFiredEvent",849],[3,"TimeManager",896],[8,"TimerSetter",952],[3,"TimerID",896],[3,"VirtualProcessWrapper",957],[3,"VirtualContext",986],[3,"Context",1086],[3,"VirtualSystem",1013],[3,"Node",1087],[3,"RefMut",1088],[3,"Ref",1088],[3,"Network",1089],[15,"u64"],[13,"Manual",827],[13,"TimerSet",119],[13,"MessageSent",119],[13,"ProcessStopped",119],[13,"TimerCancelled",119],[13,"MessageReceived",381],[13,"TimerFired",381],[8,"AddressResolver",700]],"b":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
